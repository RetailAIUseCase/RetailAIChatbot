import React, { useState } from "react";
import { FileText, Download } from "lucide-react";

interface Document {
  id: number;
  name: string;
  creationDate: string;
  url?: string;
  content?: string; // For demo purposes
}

const GeneratedDocuments: React.FC = () => {
  const [documents, setDocuments] = useState<Document[]>([
    {
      id: 1,
      name: "Purchase Order - PO-2025-001.pdf",
      creationDate: "2025-09-26",
      content:
        "Sample Purchase Order Content\n\nPO Number: PO-2025-001\nDate: September 26, 2025\nVendor: ABC Supplies\n\nItems:\n1. Product A - Qty: 100 - $50.00\n2. Product B - Qty: 50 - $75.00\n\nTotal: $125.00",
    },
    {
      id: 2,
      name: "Invoice - INV-2025-045.pdf",
      creationDate: "2025-09-25",
      content:
        "Sample Invoice Content\n\nInvoice Number: INV-2025-045\nDate: September 25, 2025\nBill To: XYZ Corporation\n\nItems:\n1. Service A - Qty: 1 - $100.00\n2. Service B - Qty: 2 - $150.00\n\nTotal: $400.00",
    },
    {
      id: 3,
      name: "Inventory Report - September.xlsx",
      creationDate: "2025-09-24",
      content:
        "Sample Inventory Report Content\n\nReport Date: September 24, 2025\nGenerated By: DEF Analytics\n\nSummary:\n- Total Products: 500\n- In Stock: 300\n- Out of Stock: 200",
    },
    {
      id: 4,
      name: "Sales Summary - Q3-2025.pdf",
      creationDate: "2025-09-23",
      content:
        "Sample Sales Summary Content\n\nReport Period: Q3 2025\nGenerated By: GHI Analytics\n\nSummary:\n- Total Sales: $1,000,000\n- Total Returns: $50,000\n- Net Sales: $950,000",
    },
    {
      id: 5,
      name: "Shipping Manifest - SM-2025-089.pdf",
      creationDate: "2025-09-22",
      url: "https://your-api.com/files/document.pdf",
    },
    {
      id: 6,
      name: "Product Catalog - Fall 2025.pdf",
      creationDate: "2025-09-21",
      url: "https://your-api.com/files/document.pdf",
    },
    {
      id: 7,
      name: "Monthly Report - August 2025.docx",
      creationDate: "2025-09-20",
      url: "https://your-api.com/files/document.pdf",
    },
    {
      id: 8,
      name: "Tax Document - TD-2025-012.pdf",
      creationDate: "2025-09-19",
      url: "https://your-api.com/files/document.pdf",
    },
  ]);

  const handleDownload = (doc: Document) => {
    try {
      let blob: Blob;
      let mimeType: string;

      if (doc.name.endsWith(".pdf")) {
        mimeType = "application/pdf";
      } else if (doc.name.endsWith(".xlsx") || doc.name.endsWith(".xls")) {
        mimeType =
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
      } else if (doc.name.endsWith(".docx")) {
        mimeType =
          "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
      } else {
        mimeType = "text/plain";
      }

      if (doc.url && doc.url !== "#") {
        fetch(doc.url)
          .then((response) => response.blob())
          .then((blob) => {
            const url = window.URL.createObjectURL(blob);
            const link = document.createElement("a");
            link.href = url;
            link.download = doc.name;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            window.URL.revokeObjectURL(url);
          })
          .catch((error) => {
            console.error("Download failed:", error);
            alert("Failed to download file. Please try again.");
          });
      } else if (doc.content) {
        blob = new Blob([doc.content], { type: "text/plain" });
        const url = window.URL.createObjectURL(blob);
        const link = document.createElement("a");
        link.href = url;
        const fileName = doc.name.replace(/\.(pdf|xlsx|docx)$/, ".txt");
        link.download = fileName;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        window.URL.revokeObjectURL(url);
      }
    } catch (error) {
      console.error("Download error:", error);
      alert("An error occurred while downloading the file.");
    }
  };

  return (
    <div className="h-auto">
      <h1 className="text-sm font-semibold text-foreground mb-2">
        Generated Documents
      </h1>

      <div className="bg-white rounded-xl shadow-lg p-2">
        <div className="max-h-[200px] overflow-y-auto scrollbar-hidden">
          {documents.length > 0 ? (
            <div className="space-y-2">
              {documents.map((doc) => (
                <div
                  key={doc.id}
                  className="flex items-center justify-between p-2 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors duration-200"
                >
                  {/* Left side - Icon and Document Info */}
                  <div className="flex items-center gap-3 flex-1 min-w-0">
                    <div className="flex-shrink-0">
                      <FileText size={20} className="text-green-600" />
                    </div>
                    <div className="flex flex-col min-w-0">
                      <p className="text-xs font-medium text-gray-800 truncate">
                        {doc.name}
                      </p>
                      <p className="text-[10px] text-gray-500">
                        Created: {doc.creationDate}
                      </p>
                    </div>
                  </div>

                  {/* Right side - Download Button */}
                  <button
                    onClick={() => handleDownload(doc)}
                    className="flex-shrink-0 p-2 text-green-600 hover:bg-green-50 rounded-md transition-colors duration-200"
                    title="Download Document"
                  >
                    <Download size={20} />
                  </button>
                </div>
              ))}
            </div>
          ) : (
            <div className="text-center py-12 text-gray-500">
              <FileText size={48} className="mx-auto mb-3 opacity-50" />
              <p className="text-sm">No documents generated yet</p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default GeneratedDocuments;
